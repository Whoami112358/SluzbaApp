@model IEnumerable<WebApplication2.Models.Harmonogram>

<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Harmonogram Służb - Dyżurny</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <!-- Dodanie biblioteki Chart.js -->
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            box-sizing: border-box;
            text-align: center;
        }

        header {
            background-color: #2c3e50;
            color: white;
            padding: 10px 20px;
        }

        nav ul {
            list-style: none;
            margin: 0;
            padding: 0;
            display: flex;
            gap: 20px;
        }

            nav ul li {
                display: inline;
            }

                nav ul li a {
                    color: white;
                    text-decoration: none;
                    font-weight: bold;
                    transition: color 0.3s ease;
                }

                    nav ul li a:hover {
                        color: #1abc9c;
                    }

        h1 {
            text-align: center;
            margin-top: 20px;
        }

        a {
            text-decoration: none;
            color: #1abc9c;
            font-weight: bold;
            transition: color 0.3s ease;
        }

            a:hover {
                color: #34495e;
            }

        .chart-container {
            display: none; /* Wykres domyślnie ukryty */
            width: 50%; /* Zmniejszenie szerokości kontenera */
            margin: 20px auto;
        }

        table {
            width: 80%;
            margin: 20px auto;
            border-collapse: collapse;
            background-color: white;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        th, td {
            padding: 12px 15px;
            text-align: center;
            border: 1px solid #ddd;
        }

        th {
            background-color: #34495e;
            color: white;
        }

        td {
            background-color: #f9f9f9;
        }

        .toggle-button {
            margin-top: 10px;
            padding: 10px 15px;
            background-color: #1abc9c;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

            .toggle-button:hover {
                background-color: #16a085;
            }

        /* Styl przekreślenia żołnierza */
        .strikethrough {
            text-decoration: line-through;
            color: red;
        }
    </style>
</head>
<body>
    <header>
        <nav>
            <ul>
                <li><a href="@Url.Action("DyzurnyView", "Dyzurny")" style="color: #1abc9c;">Wróć do Strony głównej</a></li>
                <li><a href="@Url.Action("DodajHarmonogramKC", "Dyzurny")">Dodaj Harmonogram</a></li>
            </ul>
        </nav>
    </header>

    <h1>Harmonogram Służb</h1>

    <!-- Przykładowy link do pobrania pliku -->
    <a href="@Url.Action("Download", "Dyzurny")" class="harm-downloadButt">
        Pobierz harmonogram
    </a>

    <!-- Przycisk do wyświetlania wykresu -->
    <button id="toggleChart" class="toggle-button">Pokaż raport porównawczy</button>

    <!-- Kontener na wykres -->
    <div class="chart-container">
        <canvas id="comparisonChart" style="width: 100%; height: auto;"></canvas>
    </div>

    <table>
        <thead>
            <tr>
                <th>ID Harmonogramu</th>
                <th>Data</th>
                <th>Żołnierz</th>
                <th>Służba</th>
                <th>Akcje</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                bool hasSubstitute = item.Zastepcy != null && item.Zastepcy.Any();
                var substitute = hasSubstitute ? item.Zastepcy.FirstOrDefault() : null;
                string substituteName = substitute != null && substitute.ZolnierzZastepowanego != null
                ? $"{substitute.ZolnierzZastepowanego.Imie} {substitute.ZolnierzZastepowanego.Nazwisko}"
                : "Brak";

                bool canAssignSubstitute = !hasSubstitute;

                <tr>
                    <td>@item.ID_Harmonogram</td>
                    <td>@item.Data.ToString("yyyy-MM-dd")</td>
                    <td>
                        @if (hasSubstitute && item.Zolnierz != null)
                        {
                            <span class="strikethrough">
                                @item.Zolnierz.Imie @item.Zolnierz.Nazwisko
                            </span>
                            <br />
                            <span>
                                @substituteName
                            </span>
                        }
                        else
                        {
                            @(item.Zolnierz != null
                                ? $"{item.Zolnierz.Imie} {item.Zolnierz.Nazwisko}"
                                : "Brak")
                        }
                    </td>
                    <td>@(item.Sluzba?.Rodzaj ?? "Brak")</td>
                    <td>
                        @if (canAssignSubstitute)
                        {
                            <a href="@Url.Action("PrzydzielZastepce", "Dyzurny", new { idHarmonogram = item.ID_Harmonogram })"
                               style="color: #e74c3c; font-weight: bold; text-decoration: none;">
                                Przydziel zastępcę
                            </a>
                        }
                        else
                        {
                            <span style="color: green; font-weight: bold;">Zastępca przydzielony</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <script>
        document.getElementById('toggleChart').addEventListener('click', function () {
            const chartContainer = document.querySelector('.chart-container');
            if (chartContainer.style.display === 'none' || chartContainer.style.display === '') {
                chartContainer.style.display = 'block';
                this.textContent = 'Ukryj raport porównawczy';
            } else {
                chartContainer.style.display = 'none';
                this.textContent = 'Pokaż raport porównawczy';
            }
        });

        const chartData = @Html.Raw(Json.Serialize(ViewBag.ChartData));

        const ctx = document.getElementById('comparisonChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: chartData.labels,
                datasets: [{
                    label: 'Liczba osób na służbie w tym miesiącu',
                    data: chartData.values,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
</body>
</html>
