@model IEnumerable<WebApplication2.Models.Harmonogram>

<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Harmonogram</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            box-sizing: border-box;
            text-align: center;
        }

        header {
            background-color: #2c3e50;
            color: white;
            padding: 10px 20px;
        }

        nav ul {
            list-style: none;
            margin: 0;
            padding: 0;
            display: flex;
            gap: 20px;
        }

            nav ul li {
                display: inline;
            }

                nav ul li a {
                    color: white;
                    text-decoration: none;
                    font-weight: bold;
                    transition: color 0.3s ease;
                }

                    nav ul li a:hover {
                        color: #1abc9c;
                    }

        h1 {
            text-align: center;
            margin-top: 20px;
        }

        ul {
            list-style: none;
            padding: 0;
            margin: 0 0 20px 0;
            text-align: center;
        }

            ul li {
                display: inline;
                margin-right: 10px;
            }

        a {
            text-decoration: none;
            color: #1abc9c;
            font-weight: bold;
            transition: color 0.3s ease;
        }

            a:hover {
                color: #34495e;
            }

        table {
            width: 80%;
            margin: 20px auto;
            border-collapse: collapse;
            background-color: white;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        th, td {
            padding: 12px 15px;
            text-align: center;
            border: 1px solid #ddd;
        }

        th {
            background-color: #34495e;
            color: white;
        }

        td {
            background-color: #f9f9f9;
        }

        /* Styl przekreślenia starego żołnierza */
        .strikethrough {
            text-decoration: line-through;
            color: red;
        }
    </style>
</head>
<body>
    @{
        // Odczytujemy słownik z kontrolera, w którym jest info o starym żołnierzu
        var replacedSoldiers = ViewBag.ReplacedSoldiers as Dictionary<int, int>;
        // Ewentualnie pełna lista żołnierzy do odnalezienia starego soldiera
        var zolnierzeDb = ViewBag.ZolnierzeDb as List<WebApplication2.Models.Zolnierz>;
    }

    <header>
        <nav>
            <ul>
                <li><a href="/Dyzurny/DyzurnyView" style="color: #1abc9c;">Wróć do Strony głównej</a></li>
                <li><a href="/Dyzurny/DodajHarmonogramKC">Dodaj Harmonogram</a></li>
            </ul>
        </nav>
    </header>

    <h1>Harmonogram Służb</h1>

    <!-- Przykładowy link do pobrania pliku (jeśli istnieje w kontrolerze) -->
    <a href="@Url.Action("Download")" class="harm-downloadButt">
        Pobierz harmonogram
    </a>

    <table>
        <thead>
            <tr>
                <th>ID Harmonogramu</th>
                <th>Data</th>
                <th>Żołnierz</th>
                <th>Służba</th>
                <th>Akcje</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                // Sprawdzamy, czy dany ID_Harmonogram był już zmieniany (ma starego żołnierza)
                bool isReplaced = replacedSoldiers != null && replacedSoldiers.ContainsKey(item.ID_Harmonogram);
                int? oldZolnierzId = isReplaced ? replacedSoldiers[item.ID_Harmonogram] : (int?)null;

                <tr>
                    <td>@item.ID_Harmonogram</td>
                    <td>@item.Data.ToString("yyyy-MM-dd")</td>
                    <td>
                        @if (isReplaced && oldZolnierzId.HasValue)
                        {
                            // Spróbuj odnaleźć starego żołnierza w bazie (lub w Modelu)
                            var oldZolnierz = (zolnierzeDb != null)
                            ? zolnierzeDb.FirstOrDefault(z => z.ID_Zolnierza == oldZolnierzId.Value)
                            : null;

                            // Jeśli nie ma w bazie, ewentualnie pominąć
                            if (oldZolnierz != null)
                            {
                                <span class="strikethrough">
                                    @oldZolnierz.Imie @oldZolnierz.Nazwisko
                                </span>
                                <span> → </span>
                            }
                        }

                        <!-- Wyświetlamy aktualnie przypisanego żołnierza -->
                        @(item.Zolnierz != null
                            ? $"{item.Zolnierz.Imie} {item.Zolnierz.Nazwisko}"
                            : "Brak")
                    </td>
                    <td>@(item.Sluzba?.Rodzaj ?? "Brak")</td>

                    <!-- Dodajemy kolumnę z przyciskiem "Przydziel zastępcę" -->
                    <td>
                        <a href="@Url.Action("PrzydzielZastepce", "Dowodca", new { idHarmonogram = item.ID_Harmonogram })"
                           style="color: #e74c3c; font-weight: bold; text-decoration: none;">
                            Przydziel zastępcę
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</body>
</html>
